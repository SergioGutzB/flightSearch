(function(){'use strict';var legacySupport=(angular.version.major===1&&angular.version.minor===0);angular.module('ui-rangeSlider',[]).directive('rangeSlider',['$document','$filter','$log',function($document,$filter,$log){var eventNamespace='.rangeSlider',defaults={disabled:false,orientation:'horizontal',step:0,decimalPlaces:0,showValues:true,preventEqualMinMax:false,attachHandleValues:false},actions=window.navigator.pointerEnabled?{start:'pointerdown',move:'pointermove',end:'pointerup',over:'pointerdown',out:'mouseout'}:window.navigator.msPointerEnabled?{start:'MSPointerDown',move:'MSPointerMove',end:'MSPointerUp',over:'MSPointerDown',out:'mouseout'}:{start:'mousedown touchstart',move:'mousemove touchmove',end:'mouseup touchend',over:'mouseover touchstart',out:'mouseout'},onEvent=actions.start+eventNamespace,moveEvent=actions.move+eventNamespace,offEvent=actions.end+eventNamespace,overEvent=actions.over+eventNamespace,outEvent=actions.out+eventNamespace,client=function(f){try{return[(f.clientX||f.originalEvent.clientX||f.originalEvent.touches[0].clientX),(f.clientY||f.originalEvent.clientY||f.originalEvent.touches[0].clientY)];}catch(e){return['x','y'];}},restrict=function(value){return(value<0?0:(value>100?100:value));},isNumber=function(n){return!isNaN(parseFloat(n))&&isFinite(n);},scopeOptions={disabled:'=?',min:'=',max:'=',modelMin:'=?',modelMax:'=?',onHandleDown:'&',onHandleUp:'&',orientation:'@',step:'@',decimalPlaces:'@',filter:'@',filterOptions:'@',showValues:'@',pinHandle:'@',preventEqualMinMax:'@',attachHandleValues:'@'};if(legacySupport){scopeOptions.disabled='=';scopeOptions.modelMin='=';scopeOptions.modelMax='=';}
return{restrict:'A',replace:true,template:['<div class="ngrs-range-slider">','<div class="ngrs-runner">','<div class="ngrs-handle ngrs-handle-min"><i></i></div>','<div class="ngrs-handle ngrs-handle-max"><i></i></div>','<div class="ngrs-join"></div>','</div>','<div class="ngrs-value-runner">','<div class="ngrs-value ngrs-value-min" ng-show="showValues"><div>{{filteredModelMin}}</div></div>','<div class="ngrs-value ngrs-value-max" ng-show="showValues"><div>{{filteredModelMax}}</div></div>','</div>','</div>'].join(''),scope:scopeOptions,link:function(scope,element,attrs,controller){var $slider=angular.element(element),handles=[element.find('.ngrs-handle-min'),element.find('.ngrs-handle-max')],values=[element.find('.ngrs-value-min'),element.find('.ngrs-value-max')],join=element.find('.ngrs-join'),pos='left',posOpp='right',orientation=0,allowedRange=[0,0],range=0,down=false;scope.filteredModelMin=scope.modelMin;scope.filteredModelMax=scope.modelMax;attrs.$observe('disabled',function(val){if(!angular.isDefined(val)){scope.disabled=defaults.disabled;}
scope.$watch('disabled',setDisabledStatus);});attrs.$observe('orientation',function(val){if(!angular.isDefined(val)){scope.orientation=defaults.orientation;}
var classNames=scope.orientation.split(' '),useClass;for(var i=0,l=classNames.length;i<l;i++){classNames[i]='ngrs-'+classNames[i];}
useClass=classNames.join(' ');$slider.addClass(useClass);if(scope.orientation==='vertical'||scope.orientation==='vertical left'||scope.orientation==='vertical right'){pos='top';posOpp='bottom';orientation=1;}});attrs.$observe('step',function(val){if(!angular.isDefined(val)){scope.step=defaults.step;}});attrs.$observe('decimalPlaces',function(val){if(!angular.isDefined(val)){scope.decimalPlaces=defaults.decimalPlaces;}});attrs.$observe('showValues',function(val){if(!angular.isDefined(val)){scope.showValues=defaults.showValues;}else{if(val==='false'){scope.showValues=false;}else{scope.showValues=true;}}});attrs.$observe('pinHandle',function(val){if(!angular.isDefined(val)){scope.pinHandle=null;}else{if(val==='min'||val==='max'){scope.pinHandle=val;}else{scope.pinHandle=null;}}
scope.$watch('pinHandle',setPinHandle);});attrs.$observe('preventEqualMinMax',function(val){if(!angular.isDefined(val)){scope.preventEqualMinMax=defaults.preventEqualMinMax;}else{if(val==='false'){scope.preventEqualMinMax=false;}else{scope.preventEqualMinMax=true;}}});attrs.$observe('attachHandleValues',function(val){if(!angular.isDefined(val)){scope.attachHandleValues=defaults.attachHandleValues;}else{if(val==='false'){scope.attachHandleValues=false;}else{scope.attachHandleValues=true;}}});scope.$watch('min',setMinMax);scope.$watch('max',setMinMax);scope.$watch('modelMin',setModelMinMax);scope.$watch('modelMax',setModelMinMax);function setPinHandle(status){if(status==="min"){angular.element(handles[0]).css('display','none');angular.element(handles[1]).css('display','block');}else if(status==="max"){angular.element(handles[0]).css('display','block');angular.element(handles[1]).css('display','none');}else{angular.element(handles[0]).css('display','block');angular.element(handles[1]).css('display','block');}}
function setDisabledStatus(status){if(status){$slider.addClass('ngrs-disabled');}else{$slider.removeClass('ngrs-disabled');}}
function setMinMax(){if(scope.min>scope.max){throwError('min must be less than or equal to max');}
if(angular.isDefined(scope.min)&&angular.isDefined(scope.max)){if(!isNumber(scope.min)){throwError('min must be a number');}
if(!isNumber(scope.max)){throwError('max must be a number');}
range=scope.max-scope.min;allowedRange=[scope.min,scope.max];setModelMinMax();}}
function setModelMinMax(){if(scope.modelMin>scope.modelMax){throwWarning('modelMin must be less than or equal to modelMax');scope.modelMin=scope.modelMax;}
if((angular.isDefined(scope.modelMin)||scope.pinHandle==='min')&&(angular.isDefined(scope.modelMax)||scope.pinHandle==='max')){if(!isNumber(scope.modelMin)){if(scope.pinHandle!=='min'){throwWarning('modelMin must be a number');}
scope.modelMin=scope.min;}
if(!isNumber(scope.modelMax)){if(scope.pinHandle!=='max'){throwWarning('modelMax must be a number');}
scope.modelMax=scope.max;}
var handle1pos=restrict(((scope.modelMin-scope.min)/range)*100),handle2pos=restrict(((scope.modelMax-scope.min)/range)*100),value1pos,value2pos;if(scope.attachHandleValues){value1pos=handle1pos;value2pos=handle2pos;}
scope.modelMin=Math.max(scope.min,scope.modelMin);scope.modelMax=Math.min(scope.max,scope.modelMax);if(scope.filter){scope.filteredModelMin=$filter(scope.filter)(scope.modelMin,scope.filterOptions);scope.filteredModelMax=$filter(scope.filter)(scope.modelMax,scope.filterOptions);}else{scope.filteredModelMin=scope.modelMin;scope.filteredModelMax=scope.modelMax;}
if(scope.min===scope.max&&scope.modelMin==scope.modelMax){angular.element(handles[0]).css(pos,'0%');angular.element(handles[1]).css(pos,'100%');if(scope.attachHandleValues){angular.element('.ngrs-value-runner').addClass('ngrs-attached-handles');angular.element(values[0]).css(pos,'0%');angular.element(values[1]).css(pos,'100%');}
angular.element(join).css(pos,'0%').css(posOpp,'0%');}else{angular.element(handles[0]).css(pos,handle1pos+'%');angular.element(handles[1]).css(pos,handle2pos+'%');if(scope.attachHandleValues){angular.element('.ngrs-value-runner').addClass('ngrs-attached-handles');angular.element(values[0]).css(pos,value1pos+'%');angular.element(values[1]).css(pos,value2pos+'%');angular.element(values[1]).css(posOpp,'auto');}
angular.element(join).css(pos,handle1pos+'%').css(posOpp,(100-handle2pos)+'%');if(handle1pos>95){angular.element(handles[0]).css('z-index',3);}}}}
function handleMove(index){var $handle=handles[index];$handle.bind(onEvent+'X',function(event){var handleDownClass=(index===0?'ngrs-handle-min':'ngrs-handle-max')+'-down',modelValue=(index===0?scope.modelMin:scope.modelMax)-scope.min,originalPosition=(modelValue/range)*100,originalClick=client(event),previousClick=originalClick,previousProposal=false;if(angular.isFunction(scope.onHandleDown)){scope.onHandleDown();}
angular.element('body').bind('selectstart'+eventNamespace,function(){return false;});if(!scope.disabled){down=true;$handle.addClass('ngrs-down');$slider.addClass('ngrs-focus '+handleDownClass);angular.element('body').addClass('ngrs-touching');$document.bind(moveEvent,function(e){e.preventDefault();var currentClick=client(e),movement,proposal,other,per=(scope.step/range)*100,otherModelPosition=(((index===0?scope.modelMax:scope.modelMin)-scope.min)/range)*100;if(currentClick[0]==="x"){return;}
currentClick[0]-=originalClick[0];currentClick[1]-=originalClick[1];movement=[(previousClick[0]!==currentClick[0]),(previousClick[1]!==currentClick[1])];proposal=originalPosition+((currentClick[orientation]*100)/(orientation?$slider.height():$slider.width()));proposal=restrict(proposal);if(scope.preventEqualMinMax){if(per===0){per=(1/range)*100;}
if(index===0){otherModelPosition=otherModelPosition-per;}else if(index===1){otherModelPosition=otherModelPosition+per;}}
if(index===0){proposal=proposal>otherModelPosition?otherModelPosition:proposal;}else if(index===1){proposal=proposal<otherModelPosition?otherModelPosition:proposal;}
if(scope.step>0){if(proposal<100&&proposal>0){proposal=Math.round(proposal/per)*per;}}
if(proposal>95&&index===0){$handle.css('z-index',3);}else{$handle.css('z-index','');}
if(movement[orientation]&&proposal!=previousProposal){if(index===0){scope.modelMin=parseFloat((((proposal*range)/100)+scope.min)).toFixed(scope.decimalPlaces);}else if(index===1){scope.modelMax=parseFloat((((proposal*range)/100)+scope.min)).toFixed(scope.decimalPlaces);}
scope.$apply();previousProposal=proposal;}
previousClick=currentClick;}).bind(offEvent,function(){if(angular.isFunction(scope.onHandleUp)){scope.onHandleUp();}
$document.off(moveEvent);$document.off(offEvent);angular.element('body').removeClass('ngrs-touching');down=false;$handle.removeClass('ngrs-down');$handle.removeClass('ngrs-over');$slider.removeClass('ngrs-focus '+handleDownClass);});}}).on(overEvent,function(){$handle.addClass('ngrs-over');}).on(outEvent,function(){if(!down){$handle.removeClass('ngrs-over');}});}
function throwError(message){scope.disabled=true;throw new Error('RangeSlider: '+message);}
function throwWarning(message){$log.warn(message);}
scope.$on('$destroy',function(){$slider.off(eventNamespace);angular.element('body').off(eventNamespace);$document.off(eventNamespace);for(var i=0,l=handles.length;i<l;i++){handles[i].off(eventNamespace);handles[i].off(eventNamespace+'X');}});$slider.bind('selectstart'+eventNamespace,function(event){return false;}).bind('click',function(event){event.stopPropagation();});handleMove(0);handleMove(1);}};}]);window.requestAnimFrame=(function(){return window.requestAnimationFrame||window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame||function(callback){window.setTimeout(callback,1000/60);};})();}());